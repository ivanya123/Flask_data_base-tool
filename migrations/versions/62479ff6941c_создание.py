"""Создание

Revision ID: 62479ff6941c
Revises: 
Create Date: 2024-09-27 23:35:09.856423

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '62479ff6941c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('coating',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('material_coating', sa.String(length=64), nullable=True),
    sa.Column('color_coating', sa.String(length=32), nullable=True),
    sa.Column('type_application', sa.String(length=64), nullable=True),
    sa.Column('max_thickness', sa.String(length=32), nullable=True),
    sa.Column('nano_hardness', sa.String(length=32), nullable=True),
    sa.Column('temperature_resistance', sa.Float(), nullable=True),
    sa.Column('coefficient_friction', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('coating', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_coating_name'), ['name'], unique=True)

    op.create_table('csv_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename_strength', sa.String(length=128), nullable=False),
    sa.Column('filename_temperature', sa.String(length=128), nullable=False),
    sa.Column('path', sa.String(length=256), nullable=False),
    sa.Column('path_graphic_s', sa.String(length=256), nullable=True),
    sa.Column('path_graphic_t', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('filename_strength'),
    sa.UniqueConstraint('filename_temperature'),
    sa.UniqueConstraint('path')
    )
    op.create_table('material_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tools',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('name_easy', sa.String(length=64), nullable=True),
    sa.Column('tool_type', sa.String(length=64), nullable=True),
    sa.Column('material_tool', sa.String(length=64), nullable=True),
    sa.Column('is_indexable', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tools', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tools_name'), ['name'], unique=True)

    op.create_table('drill_geometry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tool_id', sa.Integer(), nullable=False),
    sa.Column('drill_type', sa.String(length=64), nullable=True),
    sa.Column('diameter', sa.Float(), nullable=True),
    sa.Column('top_angle', sa.Float(), nullable=True),
    sa.Column('screw_angle', sa.Float(), nullable=True),
    sa.Column('front_angle', sa.Float(), nullable=True),
    sa.Column('rear_angle', sa.Float(), nullable=True),
    sa.Column('transverse_edge_angle', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['tool_id'], ['tools.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tool_id')
    )
    op.create_table('inserts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tool_id', sa.Integer(), nullable=True),
    sa.Column('material', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['tool_id'], ['tools.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('materials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('prop_physics', sa.String(length=64), nullable=True),
    sa.Column('structure', sa.Text(), nullable=True),
    sa.Column('properties', sa.String(length=120), nullable=True),
    sa.Column('gost', sa.String(length=64), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['type_id'], ['material_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('materials', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_materials_name'), ['name'], unique=True)

    op.create_table('milling_geometry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tool_id', sa.Integer(), nullable=False),
    sa.Column('diameter', sa.Float(), nullable=True),
    sa.Column('number_teeth', sa.Integer(), nullable=True),
    sa.Column('front_angle', sa.Float(), nullable=True),
    sa.Column('spiral_angle', sa.Float(), nullable=True),
    sa.Column('f_rear_angle', sa.Float(), nullable=True),
    sa.Column('s_rear_angle', sa.Float(), nullable=True),
    sa.Column('main_rear_angle', sa.Float(), nullable=True),
    sa.Column('angular_pitch', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['tool_id'], ['tools.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tool_id')
    )
    op.create_table('turning_geometry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tool_id', sa.Integer(), nullable=False),
    sa.Column('turning_type', sa.String(length=64), nullable=True),
    sa.Column('front_angle', sa.Float(), nullable=True),
    sa.Column('main_rear_angle', sa.Float(), nullable=True),
    sa.Column('sharpening_angle', sa.Float(), nullable=True),
    sa.Column('cutting_angle', sa.Float(), nullable=True),
    sa.Column('aux_rear_angle', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['tool_id'], ['tools.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tool_id')
    )
    op.create_table('adhesive',
    sa.Column('material_id', sa.Integer(), nullable=False),
    sa.Column('coating_id', sa.Integer(), nullable=False),
    sa.Column('temperature', sa.Integer(), nullable=False),
    sa.Column('bond_strength_adhesive', sa.Float(), nullable=False),
    sa.Column('normal_shear_strength', sa.Float(), nullable=False),
    sa.Column('new_column', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['coating_id'], ['coating.id'], ),
    sa.ForeignKeyConstraint(['material_id'], ['materials.id'], ),
    sa.PrimaryKeyConstraint('material_id', 'coating_id', 'temperature')
    )
    op.create_table('coefficients',
    sa.Column('material_id', sa.Integer(), nullable=False),
    sa.Column('coating_id', sa.Integer(), nullable=False),
    sa.Column('tool_id', sa.Integer(), nullable=False),
    sa.Column('cutting_force_coefficient', sa.Float(), nullable=False),
    sa.Column('cutting_temperature_coefficient', sa.Float(), nullable=False),
    sa.Column('durability_coefficient', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['coating_id'], ['coating.id'], ),
    sa.ForeignKeyConstraint(['material_id'], ['materials.id'], ),
    sa.ForeignKeyConstraint(['tool_id'], ['tools.id'], ),
    sa.PrimaryKeyConstraint('material_id', 'coating_id', 'tool_id')
    )
    op.create_table('experiments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('material_id', sa.Integer(), nullable=True),
    sa.Column('tool_id', sa.Integer(), nullable=True),
    sa.Column('coating_id', sa.Integer(), nullable=True),
    sa.Column('spindle_speed', sa.Float(), nullable=True),
    sa.Column('feed_table', sa.Float(), nullable=True),
    sa.Column('depth_cut', sa.Float(), nullable=True),
    sa.Column('width_cut', sa.Float(), nullable=True),
    sa.Column('length_path', sa.Float(), nullable=True),
    sa.Column('durability', sa.Float(), nullable=True),
    sa.Column('csv_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['coating_id'], ['coating.id'], ),
    sa.ForeignKeyConstraint(['csv_id'], ['csv_files.id'], ),
    sa.ForeignKeyConstraint(['material_id'], ['materials.id'], ),
    sa.ForeignKeyConstraint(['tool_id'], ['tools.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recommendation_parameters',
    sa.Column('material_id', sa.Integer(), nullable=False),
    sa.Column('tool_id', sa.Integer(), nullable=False),
    sa.Column('coating_id', sa.Integer(), nullable=False),
    sa.Column('spindle_speed', sa.Integer(), nullable=True),
    sa.Column('feed_table', sa.Float(), nullable=True),
    sa.Column('roughness', sa.Float(), nullable=True),
    sa.Column('hardening', sa.Float(), nullable=True),
    sa.Column('durability', sa.Float(), nullable=True),
    sa.Column('micro_hardness', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['coating_id'], ['coating.id'], ),
    sa.ForeignKeyConstraint(['material_id'], ['materials.id'], ),
    sa.ForeignKeyConstraint(['tool_id'], ['tools.id'], ),
    sa.PrimaryKeyConstraint('material_id', 'tool_id', 'coating_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('recommendation_parameters')
    op.drop_table('experiments')
    op.drop_table('coefficients')
    op.drop_table('adhesive')
    op.drop_table('turning_geometry')
    op.drop_table('milling_geometry')
    with op.batch_alter_table('materials', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_materials_name'))

    op.drop_table('materials')
    op.drop_table('inserts')
    op.drop_table('drill_geometry')
    with op.batch_alter_table('tools', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tools_name'))

    op.drop_table('tools')
    op.drop_table('material_type')
    op.drop_table('csv_files')
    with op.batch_alter_table('coating', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_coating_name'))

    op.drop_table('coating')
    # ### end Alembic commands ###
